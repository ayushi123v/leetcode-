class Solution {
    public boolean findRotation(int[][] mat, int[][] target) {
        int n = 4 ; 
        while(n>0){
            mat = rotate(mat);
            if(isEqual(mat,target)){
                return true;
            }
            n--;
        }
        return false;
    }
    private static int[][] rotate(int [][] matrix){
        for(int i=0 ; i <matrix.length;i++){
            for(int j = i ; j<matrix[0].length;j++){
                int temp = matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;

            }
        }
        for(int i = 0 ; i<matrix.length;i++){
            int left = 0 ; 
            int right= matrix[0].length-1;
            while(left <right){
                int temp = matrix[i][left];
                matrix[i][left]=matrix[i][right];
                matrix[i][right]=temp;
                left++;
                right--;
            }
        }
        return matrix;
    }
    private static boolean isEqual(int[][] mat, int[][] target) {
        for (int i = 0; i < mat.length; i++) {
            for (int j = 0; j < mat[0].length; j++) {
                if (mat[i][j] != target[i][j]) return false;
            }
        }
        return true;
    }
}
